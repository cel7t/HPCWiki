"use strict";(self.webpackChunkhp_cwiki=self.webpackChunkhp_cwiki||[]).push([[326],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1822:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={sidebar_position:4,sidebar_label:"Software",hide_table_of_contents:!0,hide_title:!0,pagination_next:null,pagination_prev:null,title:"Software",displayed_sidebar:null},c=void 0,p={unversionedId:"misc_docs/software/nvhpc",id:"misc_docs/software/nvhpc",title:"Software",description:"Software - nvhpc",source:"@site/docs/misc_docs/software/nvhpc.mdx",sourceDirName:"misc_docs/software",slug:"/misc_docs/software/nvhpc",permalink:"/docs/misc_docs/software/nvhpc",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,sidebar_label:"Software",hide_table_of_contents:!0,hide_title:!0,pagination_next:null,pagination_prev:null,title:"Software",displayed_sidebar:null}},s={},d=[{value:"Software - nvhpc",id:"software---nvhpc",level:2},{value:"Description",id:"description",level:4},{value:"Website",id:"website",level:4},{value:"Variants installed",id:"variants-installed",level:4}],u={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"software---nvhpc"},"Software - nvhpc"),(0,a.kt)("h4",{id:"description"},"Description"),(0,a.kt)("p",null,"The NVIDIA HPC SDK is a comprehensive suite of compilers, libraries and tools essential to maximizing developer productivity and the performance and portability of HPC applications. The NVIDIA HPC SDK C, C++, and Fortran compilers support GPU acceleration of HPC modeling and simulation applications with standard C++ and Fortran, OpenACC directives, and CUDA. GPU-accelerated math libraries maximize performance on common HPC algorithms, and optimized communications libraries enable standards-based multi-GPU and scalable systems programming. Performance profiling and debugging tools simplify porting and optimization of HPC applications."),(0,a.kt)("h4",{id:"website"},"Website"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.nvidia.com/hpc-sdk"},"https://developer.nvidia.com/hpc-sdk")),(0,a.kt)("h4",{id:"variants-installed"},"Variants installed"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 20.11"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 10.2.0")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 21.1"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 10.2.0")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 21.2"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 10.2.0")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 21.7"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 10.3.0")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 21.9"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 11.2.0")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 22.2"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 8.5.0")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"nvhpc 22.3"),(0,a.kt)("div",{class:"ul-circle"},"- Compiled using: gcc 11.2.0"))))}m.isMDXComponent=!0}}]);